@model DGSappSem2Final.Models.Classes.Classes

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Classes </h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Classes</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ClassId)

    <div class="form-group">
        @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control", @readonly = "read-only" } })
            @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GradeId, "Grade Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("GradeId", null, htmlAttributes: new { @class = "form-control", @readonly = "read-only" })*@
            @Html.EditorFor(model => model.GradeName, new { htmlAttributes = new { @class = "form-control", @readonly = "read-only" } })

            @Html.ValidationMessageFor(model => model.GradeId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.GradeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GradeName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GradeName, "", new { @class = "text-danger" })
        </div>*@
    @*</div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.MaxNoOfClasses, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxNoOfClasses, new { htmlAttributes = new { @class = "form-control", @readonly = "read-only" } })
            @Html.ValidationMessageFor(model => model.MaxNoOfClasses, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxNoOfStudentsPerClass, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxNoOfStudentsPerClass, new { htmlAttributes = new { @class = "form-control", @readonly = "read-only" } })
            @Html.ValidationMessageFor(model => model.MaxNoOfStudentsPerClass, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NoOfAssignedStudents, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NoOfAssignedStudents, new { htmlAttributes = new { @class = "form-control", @readonly = "read-only" } })
            @Html.ValidationMessageFor(model => model.NoOfAssignedStudents, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.StaffId, "StaffId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StaffId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.AssignedTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.AssignedTeacher, new SelectList(Model.TeacherNameCollection), "- Please select your assigned teacher -")
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
