@model DGSappSem2Final.Models.Murals.ExtraMuralAgeGroups

@{
    ViewBag.Title = "Create";
}

<h2>Add an Extramural Teams</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ExtraMuralAgeGroups</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ExtraMuralName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ExtraMuralId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ExtraMuralId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.ExtraMuralName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtraMuralName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtraMuralName, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.AgeGroupName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.AgeGroupName, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AgeGroupName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.NoAssignedStudents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoAssignedStudents, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoAssignedStudents, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.StaffId, "StaffId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StaffId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.AssignedTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AssignedTeacher, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AssignedTeacher, "", new { @class = "text-danger" })
        </div>
    </div>*@


   <div class="form-group">
    @Html.LabelFor(model => model.AssignedTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.AssignedTeacher, new SelectList(Model.TeacherNameCollection), "- Please select your assigned teacher -")
    </div>
</div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
